const bcrypt = require('bcrypt');
const sqlite3 = require('sqlite3').verbose();
const { encryptIBAN, decryptIBAN } = require('../controllers/security')
const path = require('path');
const DB_PATH = path.join(__dirname, '../database.db');

const db = new sqlite3.Database(DB_PATH, (err) => {
    if (err) {
        console.error('Erreur de connexion à la base de données:', err.message);
    } else {
        console.log('Connecté à la base de données SQLite CommercePayment');
    }
});

class CommercePayment{
    static async addNewInfoPayment({IBAN_commerce, BIC_SWIFT, titulaire_compte, nom_banque,devise,id_commerce}){
        return new Promise((resolve, reject)=>{
            const crybted_Iban = encryptIBAN(IBAN_commerce) ;
            const requete = "INSERT INTO commerce_payment (IBAN_commerce, BIC_SWIFT, titulaire_compte, nom_banque,devise,id_commerce)" +
            "VALUES(?,?,?,?,?,?)" ;
            db.run(requete,[crybted_Iban, BIC_SWIFT, titulaire_compte, nom_banque,devise,id_commerce],
                function(err){
                    if(err){
                        return reject(err);
                    } else{
                        return resolve(this.last);
                    }
                }
            )
        });   
    }
}


module.exports = CommercePayment;